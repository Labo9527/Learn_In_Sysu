`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2018/11/14 20:08:24
// Design Name: 
// Module Name: InstructionMemory
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module InstructionMemory(
    input RW,
    input [31:0] IAddr,
    output [5:0] op,
    output [4:0] rs,
    output [4:0] rt,
    output [4:0] rd,
    output [4:0] sa,
    output [15:0] immediate,
    output [31:0] IDataOut
    );
    
    reg[7:0] memory[0:127];
    
    initial 
         begin
            $readmemb("D:/test.txt", memory);
         end
    always@(*) begin
    $display("1");
    end
    assign sa[4:2]=memory[IAddr+2][2:0];
    assign sa[1:0]=memory[IAddr+3][7:6];
    assign IDataOut[31:24]=memory[IAddr][7:0];
    assign IDataOut[23:16]=memory[IAddr+1][7:0];
    assign IDataOut[15:8]=memory[IAddr+2][7:0];
    assign IDataOut[7:0]=memory[IAddr+3][7:0];
    assign op=memory[IAddr][7:2];
    assign rs[4:3] = memory[IAddr][1:0];
    assign rs[2:0] = memory[IAddr + 1][7:5];
    assign rt = memory[IAddr + 1][4:0];
    assign rd = memory[IAddr + 2][7:3];
    assign immediate[15:8] = memory[IAddr + 2];
    assign immediate[7:0] = memory[IAddr + 3];
endmodule
